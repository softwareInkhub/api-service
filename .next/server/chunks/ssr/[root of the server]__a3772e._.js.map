{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/components/JsonTreeView.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { FiChevronRight, FiChevronDown } from 'react-icons/fi';\r\n\r\ninterface JsonTreeViewProps {\r\n  data: any;\r\n  level?: number;\r\n  path?: (string | number)[];\r\n  startLine?: number;\r\n}\r\n\r\nexport default function JsonTreeView({ \r\n  data, \r\n  level = 0,\r\n  path = [],\r\n  startLine = 1\r\n}: JsonTreeViewProps) {\r\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(new Set());\r\n  const [currentLine, setCurrentLine] = useState(startLine);\r\n  const indent = level * 20;\r\n\r\n  const toggleNode = (nodePath: string) => {\r\n    const newExpanded = new Set(expandedNodes);\r\n    if (newExpanded.has(nodePath)) {\r\n      newExpanded.delete(nodePath);\r\n    } else {\r\n      newExpanded.add(nodePath);\r\n    }\r\n    setExpandedNodes(newExpanded);\r\n  };\r\n\r\n  const isExpanded = (nodePath: string) => expandedNodes.has(nodePath);\r\n\r\n  const getNodeLength = (value: any): string => {\r\n    if (Array.isArray(value)) {\r\n      return `[${value.length}]`;\r\n    }\r\n    if (typeof value === 'object' && value !== null) {\r\n      return `{${Object.keys(value).length}}`;\r\n    }\r\n    if (typeof value === 'string') {\r\n      return `\"${value.length}\"`;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  if (data === null) return (\r\n    <div className=\"flex\">\r\n      <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">{currentLine}</span>\r\n      <span className=\"text-gray-500\">null</span>\r\n    </div>\r\n  );\r\n\r\n  if (typeof data !== 'object') {\r\n    return (\r\n      <div className=\"flex\">\r\n        <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">{currentLine}</span>\r\n        <span className={\r\n          typeof data === 'string' ? 'text-green-600' :\r\n          typeof data === 'number' ? 'text-blue-600' :\r\n          typeof data === 'boolean' ? 'text-purple-600' : 'text-gray-600'\r\n        }>\r\n          {JSON.stringify(data)}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isArray = Array.isArray(data);\r\n  const items = Object.entries(data);\r\n  const nodePath = path.join('.');\r\n  const nodeLength = getNodeLength(data);\r\n\r\n  return (\r\n    <div style={{ marginLeft: indent }}>\r\n      <div className=\"flex items-center group\">\r\n        <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">{currentLine}</span>\r\n        <button\r\n          onClick={() => toggleNode(nodePath)}\r\n          className=\"p-1 hover:bg-gray-100 rounded opacity-0 group-hover:opacity-100 transition-opacity\"\r\n        >\r\n          {isExpanded(nodePath) ? <FiChevronDown size={14} /> : <FiChevronRight size={14} />}\r\n        </button>\r\n        <span className=\"text-gray-800\">\r\n          {isArray ? '[' : '{'}\r\n        </span>\r\n        <span className=\"ml-1 text-xs text-gray-500\">{nodeLength}</span>\r\n      </div>\r\n      \r\n      {isExpanded(nodePath) && (\r\n        <div className=\"ml-4\">\r\n          {items.map(([key, value], index) => (\r\n            <div key={key} className=\"flex\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-gray-800\">\r\n                    {isArray ? '' : (\r\n                      <>\r\n                        <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">\r\n                          {currentLine + index + 1}\r\n                        </span>\r\n                        <span className=\"text-purple-600\">{`\"${key}\"`}</span>\r\n                        <span className=\"text-gray-600\">: </span>\r\n                      </>\r\n                    )}\r\n                  </span>\r\n                  <JsonTreeView\r\n                    data={value}\r\n                    level={level + 1}\r\n                    path={[...path, key]}\r\n                    startLine={currentLine + index + 1}\r\n                  />\r\n                </div>\r\n                {index !== items.length - 1 && (\r\n                  <span className=\"text-gray-800\">,</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"flex\">\r\n        <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">\r\n          {currentLine + items.length + 1}\r\n        </span>\r\n        <span className=\"text-gray-800\">\r\n          {isArray ? ']' : '}'}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/config/firebase.ts"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\n// Initialize Firebase only if it hasn't been initialized already\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApps()[0];\r\n\r\n// Get Firebase services\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport const storage = getStorage(app);\r\n\r\nexport default app;\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAHA;AACA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,iEAAiE;AACjE,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AAGrE,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE;uCAEnB"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/services/templateService.ts"],"sourcesContent":["import { db } from '../config/firebase';\r\nimport { collection, addDoc, getDocs, deleteDoc, doc } from 'firebase/firestore';\r\nimport { ClientMethodTemplate } from '../types/ClientMethodTemplate';\r\n\r\nconst COLLECTION_NAME = 'namespace-api-template';\r\n\r\nexport const templateService = {\r\n  async saveTemplate(template: Omit<ClientMethodTemplate, 'id' | 'createdAt' | 'updatedAt'>) {\r\n    try {\r\n      // Clean the template data before saving\r\n      const cleanTemplate = {\r\n        ...template,\r\n        createdAt: Date.now(),\r\n        updatedAt: Date.now(),\r\n        // Remove undefined values from expectedResponse\r\n        expectedResponse: template.expectedResponse ? {\r\n          body: template.expectedResponse.body || null,\r\n          headers: template.expectedResponse.headers || null,\r\n          status: template.expectedResponse.status || null\r\n        } : null,\r\n        // Ensure other fields are not undefined\r\n        queryParams: template.queryParams || [],\r\n        headers: template.headers || [],\r\n        requestBody: template.requestBody || null\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, COLLECTION_NAME), cleanTemplate);\r\n      return { ...cleanTemplate, id: docRef.id };\r\n    } catch (error) {\r\n      console.error('Error saving template:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getTemplates() {\r\n    try {\r\n      const querySnapshot = await getDocs(collection(db, COLLECTION_NAME));\r\n      return querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      })) as ClientMethodTemplate[];\r\n    } catch (error) {\r\n      console.error('Error getting templates:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async deleteTemplate(id: string) {\r\n    try {\r\n      await deleteDoc(doc(db, COLLECTION_NAME, id));\r\n    } catch (error) {\r\n      console.error('Error deleting template:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}; "],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAGA,MAAM,kBAAkB;AAEjB,MAAM,kBAAkB;IAC7B,MAAM,cAAa,QAAsE;QACvF,IAAI;YACF,wCAAwC;YACxC,MAAM,gBAAgB;gBACpB,GAAG,QAAQ;gBACX,WAAW,KAAK,GAAG;gBACnB,WAAW,KAAK,GAAG;gBACnB,gDAAgD;gBAChD,kBAAkB,SAAS,gBAAgB,GAAG;oBAC5C,MAAM,SAAS,gBAAgB,CAAC,IAAI,IAAI;oBACxC,SAAS,SAAS,gBAAgB,CAAC,OAAO,IAAI;oBAC9C,QAAQ,SAAS,gBAAgB,CAAC,MAAM,IAAI;gBAC9C,IAAI;gBACJ,wCAAwC;gBACxC,aAAa,SAAS,WAAW,IAAI,EAAE;gBACvC,SAAS,SAAS,OAAO,IAAI,EAAE;gBAC/B,aAAa,SAAS,WAAW,IAAI;YACvC;YAEA,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,kBAAkB;YAC7D,OAAO;gBAAE,GAAG,aAAa;gBAAE,IAAI,OAAO,EAAE;YAAC;QAC3C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM;QACR;IACF;IAEA,MAAM;QACJ,IAAI;YACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE;YACnD,OAAO,cAAc,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;oBACpC,IAAI,IAAI,EAAE;oBACV,GAAG,IAAI,IAAI,EAAE;gBACf,CAAC;QACH,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,MAAM;QACR;IACF;IAEA,MAAM,gBAAe,EAAU;QAC7B,IAAI;YACF,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,iBAAiB;QAC3C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,MAAM;QACR;IACF;AACF"}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/services/namespaceService.ts"],"sourcesContent":["import { db } from '../config/firebase';\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, query, where, getDoc } from 'firebase/firestore';\r\nimport { Namespace, NamespaceAccount, NamespaceMethod } from '../types/namespace';\r\n\r\nexport const namespaceService = {\r\n  async getNamespaces(): Promise<Namespace[]> {\r\n    const querySnapshot = await getDocs(collection(db, 'namespace'));\r\n    return querySnapshot.docs.map(doc => {\r\n      const data = doc.data();\r\n      return {\r\n        id: doc.id,\r\n        'namespace-id': doc.id,\r\n        'namespace-name': data['namespace-name'] || '',\r\n        'namespace-url': data['namespace-url'] || ''\r\n      } satisfies Namespace;\r\n    });\r\n  },\r\n\r\n  async getNamespaceAccounts(namespaceId: string): Promise<NamespaceAccount[]> {\r\n    const q = query(collection(db, 'namespace-account'), where('namespace-id', '==', namespaceId));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as NamespaceAccount));\r\n  },\r\n\r\n  async getNamespaceMethods(namespaceId: string): Promise<NamespaceMethod[]> {\r\n    const q = query(\r\n      collection(db, 'namespace-account-method'), \r\n      where('namespace-id', '==', namespaceId)\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as NamespaceMethod));\r\n  },\r\n\r\n  async createNamespace(data: Omit<Namespace, 'namespace-id'>): Promise<void> {\r\n    await addDoc(collection(db, 'namespace'), data);\r\n  },\r\n\r\n  async createNamespaceAccount(data: Omit<NamespaceAccount, 'namespace-account-id'>): Promise<void> {\r\n    await addDoc(collection(db, 'namespace-account'), data);\r\n  },\r\n\r\n  async createNamespaceMethod(data: Omit<NamespaceMethod, 'namespace-account-method-id'>): Promise<void> {\r\n    await addDoc(collection(db, 'namespace-account-method'), data);\r\n  },\r\n\r\n  async deleteNamespace(id: string): Promise<void> {\r\n    await deleteDoc(doc(db, 'namespace', id));\r\n  },\r\n\r\n  async deleteNamespaceAccount(id: string): Promise<void> {\r\n    await deleteDoc(doc(db, 'namespace-account', id));\r\n  },\r\n\r\n  async deleteNamespaceMethod(id: string): Promise<void> {\r\n    await deleteDoc(doc(db, 'namespace-account-method', id));\r\n  },\r\n\r\n  async getNamespaceAccount(namespaceId: string): Promise<NamespaceAccount | null> {\r\n    const accounts = await this.getNamespaceAccounts(namespaceId);\r\n    return accounts[0] || null;\r\n  },\r\n\r\n  async getNamespace(namespaceId: string): Promise<Namespace | null> {\r\n    const docRef = doc(db, 'namespace', namespaceId);\r\n    const docSnap = await getDoc(docRef);\r\n    \r\n    if (docSnap.exists()) {\r\n      return { id: docSnap.id, ...docSnap.data() } as Namespace;\r\n    }\r\n    \r\n    return null;\r\n  }\r\n}; "],"names":[],"mappings":"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"}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/components/api/ApiFormHeader.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { FiCheck } from 'react-icons/fi';\r\nimport { Namespace, NamespaceAccount, NamespaceMethod } from '../../types/namespace';\r\nimport { namespaceService } from '../../services/namespaceService';\r\n\r\ninterface ApiFormHeaderProps {\r\n  onMethodSelect: (method: NamespaceMethod) => void;\r\n}\r\n\r\nexport default function ApiFormHeader({ onMethodSelect }: ApiFormHeaderProps) {\r\n  const [namespaces, setNamespaces] = useState<Namespace[]>([]);\r\n  const [accounts, setAccounts] = useState<NamespaceAccount[]>([]);\r\n  const [methods, setMethods] = useState<NamespaceMethod[]>([]);\r\n  const [selectedNamespace, setSelectedNamespace] = useState<string>('');\r\n  const [selectedAccount, setSelectedAccount] = useState<string>('');\r\n  const [selectedMethod, setSelectedMethod] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    loadNamespaces();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedNamespace) {\r\n      console.group('Namespace Selection');\r\n      console.log('Selected Namespace ID:', selectedNamespace);\r\n      const namespace = namespaces.find(ns => ns['namespace-id'] === selectedNamespace);\r\n      console.log('Namespace Details:', {\r\n        name: namespace?.['namespace-name'],\r\n        url: namespace?.['namespace-url']\r\n      });\r\n      console.groupEnd();\r\n      \r\n      loadAccountsAndMethods(selectedNamespace);\r\n    } else {\r\n      setAccounts([]);\r\n      setMethods([]);\r\n      setSelectedAccount('');\r\n      setSelectedMethod('');\r\n    }\r\n  }, [selectedNamespace]);\r\n\r\n  const loadNamespaces = async () => {\r\n    const data = await namespaceService.getNamespaces();\r\n    console.group('Loading Namespaces');\r\n    console.log('Available Namespaces:', data.map(ns => ({\r\n      id: ns['namespace-id'],\r\n      name: ns['namespace-name']\r\n    })));\r\n    console.groupEnd();\r\n    setNamespaces(data);\r\n  };\r\n\r\n  const loadAccountsAndMethods = async (namespaceId: string) => {\r\n    const [accountsData, methodsData] = await Promise.all([\r\n      namespaceService.getNamespaceAccounts(namespaceId),\r\n      namespaceService.getNamespaceMethods(namespaceId)\r\n    ]);\r\n\r\n    console.group('Loading Data for Namespace');\r\n    console.log('Available Accounts:', accountsData);\r\n    console.log('Available Methods:', methodsData);\r\n    console.groupEnd();\r\n\r\n    setAccounts(accountsData);\r\n    setMethods(methodsData);\r\n  };\r\n\r\n  const handleApply = () => {\r\n    console.group('Applying Method Configuration');\r\n    \r\n    const selectedMethodData = methods.find(m => m.id === selectedMethod);\r\n    if (selectedMethodData) {\r\n      const namespace = namespaces.find(ns => ns['namespace-id'] === selectedNamespace);\r\n      const account = accounts.find(acc => acc['namespace-account-id'] === selectedAccount);\r\n      \r\n      console.log('Full Configuration:', {\r\n        namespace: {\r\n          id: namespace?.['namespace-id'],\r\n          name: namespace?.['namespace-name'],\r\n          url: namespace?.['namespace-url']\r\n        },\r\n        account: {\r\n          id: account?.['namespace-account-id'],\r\n          name: account?.['namespace-account-name'],\r\n          url: account?.['namespace-account-url-override'],\r\n          headers: account?.['namespace-account-header']\r\n        },\r\n        method: selectedMethodData\r\n      });\r\n      \r\n      onMethodSelect(selectedMethodData);\r\n    } else {\r\n      console.log('No method selected');\r\n    }\r\n    \r\n    console.groupEnd();\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white border-b mb-4\">\r\n      <div className=\"container mx-auto\">\r\n        <div className=\"flex gap-4 items-end p-4\">\r\n          <div className=\"flex-1\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Namespace</label>\r\n            <select\r\n              value={selectedNamespace}\r\n              onChange={(e) => setSelectedNamespace(e.target.value)}\r\n              className=\"w-full border rounded p-2\"\r\n            >\r\n              <option key=\"default-namespace\" value=\"\">Select Namespace</option>\r\n              {namespaces.map((ns) => (\r\n                <option key={ns.id} value={ns['namespace-id']}>\r\n                  {ns['namespace-name']}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex-1\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Account</label>\r\n            <select\r\n              value={selectedAccount}\r\n              onChange={(e) => setSelectedAccount(e.target.value)}\r\n              className=\"w-full border rounded p-2\"\r\n              disabled={!selectedNamespace}\r\n            >\r\n              <option key=\"default-account\" value=\"\">Select Account</option>\r\n              {accounts.map((acc) => (\r\n                <option key={acc.id} value={acc['namespace-account-id']}>\r\n                  {acc['namespace-account-name']}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex-1\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Method</label>\r\n            <select\r\n              value={selectedMethod}\r\n              onChange={(e) => setSelectedMethod(e.target.value)}\r\n              className=\"w-full border rounded p-2\"\r\n              disabled={!selectedNamespace}\r\n            >\r\n              <option key=\"default-method\" value=\"\">Select Method</option>\r\n              {methods.map((method) => (\r\n                <option key={method.id} value={method.id}>\r\n                  {method['namespace-account-method-name']}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleApply}\r\n            disabled={!selectedMethod}\r\n            className={`px-4 py-2 rounded flex items-center gap-2 ${\r\n              selectedMethod \r\n                ? 'bg-[#ff6b4a] text-white hover:bg-[#ff5436]' \r\n                : 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n            }`}\r\n          >\r\n            <FiCheck />\r\n            Apply\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 849, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 855, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/api-tester/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { FiSend, FiPlus, FiTrash2, FiClock, FiSearch, FiMaximize2, FiMinimize2, FiDownload } from 'react-icons/fi';\nimport dynamic from 'next/dynamic';\nimport type { default as JsonEditorType } from 'react-json-editor-ajrm';\nimport JsonTreeView from '../components/JsonTreeView';\nimport SaveTemplateModal from '../components/SaveTemplateModal';\nimport { ClientMethodTemplate } from '../types/ClientMethodTemplate';\nimport { templateService } from '../services/templateService';\nimport CreateTemplateButton from '../components/shared/CreateTemplateButton';\nimport ApiFormHeader from '../components/api/ApiFormHeader';\nimport { NamespaceMethod } from '../types/namespace';\nimport { namespaceService } from '../services/namespaceService';\n\n// Create a type for the component props\ninterface JsonEditorProps {\n  id?: string;\n  placeholder?: any;\n  locale?: any;\n  viewOnly?: boolean;\n  onChange?: (value: any) => void;\n  colors?: {\n    background: string;\n    default: string;\n  };\n  height?: string;\n  width?: string;\n  reset?: boolean;\n  modifyErrorText?: (error: string) => string;\n}\n\n// Update the dynamic import\nconst JsonEditor = dynamic<JsonEditorProps>(() =>\n  import('react-json-editor-ajrm').then(mod => mod.default)\n  , { ssr: false });\n\ninterface KeyValuePair {\n  key: string;\n  value: string;\n}\n\ninterface RequestHistory {\n  id: string;\n  timestamp: number;\n  method: string;\n  url: string;\n  queryParams: KeyValuePair[];\n  headers: KeyValuePair[];\n  body: any;\n  response?: {\n    status: number;\n    data: any;\n    headers: any;\n  };\n}\n\ninterface JsonEditorLocale {\n  format: string;\n  type: string;\n  value: string;\n  validation: string;\n  nonAlphanumeric: string;\n  quote: string;\n  alpha: string;\n  digit: string;\n  punct: string;\n  space: string;\n  safe: string;\n  unicode: string;\n  escape: string;\n}\n\nconst locale: JsonEditorLocale = {\n  format: \"Format\",\n  type: \"Type\",\n  value: \"Value\",\n  validation: \"Validation\",\n  nonAlphanumeric: \"Non-alphanumeric\",\n  quote: \"Quote\",\n  alpha: \"Alpha\",\n  digit: \"Digit\",\n  punct: \"Punctuation\",\n  space: \"Space\",\n  safe: \"Safe\",\n  unicode: \"Unicode\",\n  escape: \"Escape\"\n};\n\n// Add this helper function at the top level\nconst formatJson = (json: any): string => {\n  try {\n    return JSON.stringify(json, null, 2);\n  } catch (e) {\n    return '';\n  }\n};\n\n// Add this helper function\nconst downloadJson = (data: any, filename: string) => {\n  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\n// Add these type definitions at the top\ntype RequestTab = 'params' | 'headers' | 'body';\ntype ResponseTab = 'body' | 'headers';\n\nexport default function ApiTester() {\n  const [activeTab, setActiveTab] = useState<RequestTab>('params');\n  const [responseTab, setResponseTab] = useState<ResponseTab>('body');\n  const [method, setMethod] = useState('GET');\n  const [url, setUrl] = useState('');\n  const [queryParams, setQueryParams] = useState<KeyValuePair[]>([{ key: '', value: '' }]);\n  const [headers, setHeaders] = useState<KeyValuePair[]>([{ key: '', value: '' }]);\n  const [requestBody, setRequestBody] = useState<any>({});\n  const [response, setResponse] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [history, setHistory] = useState<RequestHistory[]>([]);\n  const [showHistory, setShowHistory] = useState(false);\n  const [urlSuggestions, setUrlSuggestions] = useState<string[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [requestFormat, setRequestFormat] = useState<'json' | 'form'>('json');\n  const [expandedHistoryId, setExpandedHistoryId] = useState<string | null>(null);\n  const [showSaveTemplate, setShowSaveTemplate] = useState(false);\n\n  // Load history from localStorage on mount\n  useEffect(() => {\n    const savedHistory = localStorage.getItem('apiRequestHistory');\n    if (savedHistory) {\n      setHistory(JSON.parse(savedHistory));\n    }\n  }, []);\n\n  // Save history to localStorage when it changes\n  useEffect(() => {\n    localStorage.setItem('apiRequestHistory', JSON.stringify(history));\n  }, [history]);\n\n  // Update URL suggestions when typing\n  useEffect(() => {\n    if (url.trim()) {\n      const suggestions = history\n        .filter(h => h.url.toLowerCase().includes(url.toLowerCase()))\n        .map(h => h.url)\n        .filter((value, index, self) => self.indexOf(value) === index)\n        .slice(0, 5);\n      setUrlSuggestions(suggestions);\n      setShowSuggestions(suggestions.length > 0);\n    } else {\n      setShowSuggestions(false);\n    }\n  }, [url, history]);\n\n  // Add to existing useEffect or create new one\n  useEffect(() => {\n    // Check for pending template application\n    const pendingTemplate = localStorage.getItem('pendingTemplateApplication');\n    if (pendingTemplate) {\n      const template = JSON.parse(pendingTemplate);\n      \n      // Apply template data\n      setMethod(template.method);\n      setUrl(template.url);\n      setQueryParams(template.queryParams.length ? template.queryParams : [{ key: '', value: '' }]);\n      setHeaders(template.headers.length ? template.headers : [{ key: '', value: '' }]);\n      \n      if (template.requestBody) {\n        setRequestBody(template.requestBody);\n        setRequestFormat(Array.isArray(template.requestBody) || typeof template.requestBody === 'object' ? 'json' : 'form');\n        setActiveTab('body');\n      } else if (template.queryParams.some((p: KeyValuePair) => p.key)) {\n        setActiveTab('params');\n      } else if (template.headers.some((h: KeyValuePair) => h.key)) {\n        setActiveTab('headers');\n      }\n\n      // Clear the pending template\n      localStorage.removeItem('pendingTemplateApplication');\n    }\n  }, []); // Run once on mount\n\n  const handleAddParam = (type: 'query' | 'header') => {\n    if (type === 'query') {\n      setQueryParams([...queryParams, { key: '', value: '' }]);\n    } else {\n      setHeaders([...headers, { key: '', value: '' }]);\n    }\n  };\n\n  const handleRemoveParam = (type: 'query' | 'header', index: number) => {\n    if (type === 'query') {\n      setQueryParams(queryParams.filter((_, i) => i !== index));\n    } else {\n      setHeaders(headers.filter((_, i) => i !== index));\n    }\n  };\n\n  const handleParamChange = (\n    type: 'query' | 'header',\n    index: number,\n    field: 'key' | 'value',\n    value: string\n  ) => {\n    if (type === 'query') {\n      const newParams = [...queryParams];\n      newParams[index][field] = value;\n      setQueryParams(newParams);\n    } else {\n      const newHeaders = [...headers];\n      newHeaders[index][field] = value;\n      setHeaders(newHeaders);\n    }\n  };\n\n  const handleSend = async () => {\n    try {\n      console.group('API Request');\n      \n      // Log request details\n      console.log('Request URL:', url);\n      console.log('Method:', method);\n      console.log('Query Parameters:', queryParams.filter(p => p.key));\n      console.log('Headers:', headers.filter(h => h.key));\n      if (method !== 'GET') {\n        console.log('Request Body:', requestBody);\n      }\n\n      setLoading(true);\n      const startTime = performance.now();\n\n      // Format request body based on method\n      let formattedBody;\n      if (method !== 'GET') {\n        try {\n          // If requestBody is string, parse it as JSON\n          formattedBody = typeof requestBody === 'string' \n            ? JSON.parse(requestBody)\n            : requestBody;\n        } catch (error) {\n          console.error('Invalid JSON in request body:', error);\n          throw new Error('Invalid JSON in request body');\n        }\n      }\n\n      // Send request through our backend proxy\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/openApi/proxy`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          method,\n          url,\n          queryParams: queryParams.filter(p => p.key).reduce((acc, { key, value }) => {\n            acc[key] = value;\n            return acc;\n          }, {} as Record<string, string>),\n          headers: headers.filter(h => h.key).reduce((acc, { key, value }) => {\n            acc[key] = value;\n            return acc;\n          }, {} as Record<string, string>),\n          body: formattedBody // Use formatted body\n        })\n      });\n\n      const endTime = performance.now();\n      const responseTime = Math.round(endTime - startTime);\n\n      const responseData = await response.json();\n\n      console.group('API Response');\n      console.log('Status:', responseData.status);\n      console.log('Time:', `${responseTime}ms`);\n      console.log('Size:', JSON.stringify(responseData.data).length, 'bytes');\n      console.log('Headers:', responseData.headers);\n      console.log('Body:', responseData.data);\n      console.groupEnd();\n\n      setResponse({\n        status: responseData.status,\n        data: responseData.data,\n        headers: responseData.headers,\n        time: `${responseTime}ms`\n      });\n\n      // Add to history\n      const historyItem: RequestHistory = {\n        id: crypto.randomUUID(),\n        timestamp: Date.now(),\n        method,\n        url,\n        queryParams: queryParams.filter(p => p.key),\n        headers: headers.filter(h => h.key),\n        body: requestBody,\n        response: {\n          status: responseData.status,\n          data: responseData.data,\n          headers: responseData.headers\n        }\n      };\n\n      setHistory(prev => [historyItem, ...prev]);\n\n    } catch (error) {\n      console.error('Request Error:', error);\n      setResponse({\n        status: 0,\n        data: { error: 'Request failed' },\n        headers: {},\n        time: '0ms'\n      });\n    } finally {\n      setLoading(false);\n      console.groupEnd();\n    }\n  };\n\n  const loadFromHistory = (item: RequestHistory) => {\n    setMethod(item.method);\n    setUrl(item.url);\n    setQueryParams(item.queryParams.length ? item.queryParams : [{ key: '', value: '' }]);\n    setHeaders(item.headers.length ? item.headers : [{ key: '', value: '' }]);\n    \n    if (item.body) {\n      setRequestBody(item.body);\n      setRequestFormat(Array.isArray(item.body) || typeof item.body === 'object' ? 'json' : 'form');\n    } else {\n      setRequestBody({});\n    }\n\n    // Set appropriate tab based on data\n    if (item.body && Object.keys(item.body).length > 0) {\n      setActiveTab('body');\n    } else if (item.queryParams.some(p => p.key)) {\n      setActiveTab('params');\n    } else if (item.headers.some(h => h.key)) {\n      setActiveTab('headers');\n    }\n\n    // Set response data if available\n    if (item.response) {\n      setResponse({\n        status: item.response.status,\n        data: item.response.data,\n        headers: item.response.headers\n      });\n      setResponseTab('body');\n    }\n    \n    setShowHistory(false);\n  };\n\n  const saveTemplate = async (template: Omit<ClientMethodTemplate, 'id' | 'createdAt' | 'updatedAt'>) => {\n    try {\n      await templateService.saveTemplate(template);\n      setShowSaveTemplate(false);\n    } catch (error) {\n      console.error('Error saving template:', error);\n      // You might want to show an error notification here\n    }\n  };\n\n  const handleMethodSelect = async (method: NamespaceMethod) => {\n    console.group('API Form Population');\n    \n    // Log Method Details\n    console.group('Method Details');\n    console.log('Name:', method['namespace-account-method-name']);\n    console.log('Type:', method['namespace-account-method-type']);\n    console.log('URL Override:', method['namespace-account-method-url-override']);\n    console.log('Query Parameters:', method['namespace-account-method-queryParams']);\n    console.groupEnd();\n\n    // Get Account and Namespace Details\n    const accounts = await namespaceService.getNamespaceAccounts(method['namespace-id']);\n    const account = accounts[0];\n    const namespace = await namespaceService.getNamespace(method['namespace-id']);\n    \n    console.group('URL Resolution');\n    console.log('Method URL:', method['namespace-account-method-url-override']);\n    console.log('Account URL:', account?.['namespace-account-url-override']);\n    console.log('Namespace URL:', namespace?.['namespace-url']);\n    \n    // Cascade through URL options\n    const finalUrl = method['namespace-account-method-url-override'] || \n                    account?.['namespace-account-url-override'] || \n                    namespace?.['namespace-url'] || \n                    '';\n    \n    console.log('Final Resolved URL:', finalUrl);\n    console.groupEnd();\n\n    // Log Account Details\n    console.group('Account Details');\n    console.log('Name:', account?.['namespace-account-name']);\n    console.log('URL Override:', account?.['namespace-account-url-override']);\n    console.log('Headers:', account?.['namespace-account-header']);\n    console.groupEnd();\n\n    // Log Form Updates\n    console.group('Form Updates');\n    \n    // Set HTTP method\n    console.log('Setting Method:', method['namespace-account-method-type']);\n    setMethod(method['namespace-account-method-type']);\n    \n    // Set the resolved URL\n    console.log('Setting URL:', finalUrl);\n    setUrl(finalUrl);\n    \n    // Set query parameters\n    if (method['namespace-account-method-queryParams']?.length) {\n      console.log('Setting Query Params:', method['namespace-account-method-queryParams']);\n      setQueryParams(method['namespace-account-method-queryParams']);\n    } else {\n      console.log('Setting Empty Query Params');\n      setQueryParams([{ key: '', value: '' }]);\n    }\n    \n    // Set headers from account\n    if (account?.['namespace-account-header']?.length) {\n      console.log('Setting Headers:', account['namespace-account-header']);\n      setHeaders(account['namespace-account-header']);\n    } else {\n      console.log('Setting Empty Headers');\n      setHeaders([{ key: '', value: '' }]);\n    }\n    \n    console.log('Resetting Body and Setting Tab to params');\n    setRequestBody({});\n    setRequestFormat('json');\n    setActiveTab('params');\n    \n    console.groupEnd();\n    console.groupEnd();\n  };\n\n  const handleTestRoute = async (route: string) => {\n    setLoading(true);\n    try {\n      let response: Response | undefined;\n      const testId = '123'; // Example ID for testing\n      \n      switch (route) {\n        case 'getAllClients':\n          response = await fetch('/api/client/getAllClients');\n          break;\n          \n        case 'getClientById':\n          response = await fetch(`/api/client/getClientById?id=${testId}`);\n          break;\n          \n        case 'createClient':\n          response = await fetch('/api/client/createClient', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              clientName: 'Test Client'\n            }),\n          });\n          break;\n\n        case 'updateClient':\n          response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/openApi/proxy`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              method: 'PUT',\n              url: `/api/client/updateClient?id=${testId}`,\n              queryParams: { id: testId },\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: {\n                clientName: 'Updated Client Name',\n                // Add other fields you want to update\n                updatedAt: new Date().toISOString()\n              }\n            })\n          });\n          break;\n\n        case 'deleteClient':\n          response = await fetch(`/api/client/deleteClient?id=${testId}`, {\n            method: 'DELETE'\n          });\n          break;\n\n        default:\n          throw new Error('Invalid route');\n      }\n\n      if (!response) {\n        throw new Error('No response received');\n      }\n\n      const data = await response.json();\n      setResponse(data);\n    } catch (error) {\n      console.error('Error testing route:', error);\n      setResponse({ status: 500, data: null, error: 'Failed to test route' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-50\">\n      {/* Main Header - Compact */}\n      <header className=\"bg-white border-b py-2\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-xl font-semibold text-gray-800\">API Tester</h1>\n            <button\n              onClick={() => setShowHistory(!showHistory)}\n              className=\"flex items-center gap-2 px-3 py-1 text-sm text-gray-600 hover:text-gray-800 rounded border hover:bg-gray-50\"\n            >\n              <FiClock size={14} />\n              History\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content - Flex Layout */}\n      <main className=\"flex-1 container mx-auto px-4 py-2 flex flex-col min-h-0\">\n        {/* Namespace Account Method Selector - Compact */}\n        <section className=\"mb-2\">\n          <ApiFormHeader onMethodSelect={handleMethodSelect} />\n        </section>\n\n        {/* API Terminal - Flex Layout */}\n        <section className=\"flex-1 bg-white rounded-lg shadow flex flex-col min-h-0\">\n          {/* Request Section - Fixed Height */}\n          <div className=\"p-3 border-b\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <select\n                value={method}\n                onChange={(e) => setMethod(e.target.value)}\n                className=\"px-2 py-1 border rounded text-sm\"\n              >\n                <option value=\"GET\">GET</option>\n                <option value=\"POST\">POST</option>\n                <option value=\"PUT\">PUT</option>\n                <option value=\"DELETE\">DELETE</option>\n              </select>\n              <input\n                type=\"text\"\n                value={url}\n                onChange={(e) => setUrl(e.target.value)}\n                placeholder=\"Enter request URL\"\n                className=\"flex-1 px-2 py-1 border rounded text-sm\"\n              />\n              <button\n                onClick={handleSend}\n                className=\"px-4 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600 flex items-center gap-1\"\n              >\n                <FiSend size={14} />\n                Send\n              </button>\n            </div>\n\n            {/* Request Tabs - Compact */}\n            <div className=\"flex border-b text-sm\">\n              {['params', 'headers', 'body'].map((tab) => (\n                <button\n                  key={tab}\n                  onClick={() => setActiveTab(tab as RequestTab)}\n                  className={`px-3 py-1 capitalize ${\n                    activeTab === tab ? 'border-b-2 border-blue-500' : ''\n                  }`}\n                >\n                  {tab}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Dynamic Content Area - No Overflow */}\n          <div className=\"flex-1 p-3\">\n            {/* Request Content */}\n            <div className=\"space-y-4\">\n              {activeTab === 'params' && (\n                <div className=\"space-y-2\">\n                  {queryParams.map((param, index) => (\n                    <div key={index} className=\"flex gap-2\">\n                      <input\n                        type=\"text\"\n                        value={param.key}\n                        onChange={(e) => handleParamChange('query', index, 'key', e.target.value)}\n                        placeholder=\"Key\"\n                        className=\"flex-1 px-3 py-2 border rounded\"\n                      />\n                      <input\n                        type=\"text\"\n                        value={param.value}\n                        onChange={(e) => handleParamChange('query', index, 'value', e.target.value)}\n                        placeholder=\"Value\"\n                        className=\"flex-1 px-3 py-2 border rounded\"\n                      />\n                      <button\n                        onClick={() => handleRemoveParam('query', index)}\n                        className=\"px-3 text-red-500 hover:text-red-600\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n                  <button\n                    onClick={() => handleAddParam('query')}\n                    className=\"text-[#ff6b4a] font-medium hover:text-[#ff5436]\"\n                  >\n                    Add\n                  </button>\n                </div>\n              )}\n\n              {activeTab === 'headers' && (\n                <div className=\"space-y-2\">\n                  {headers.map((header, index) => (\n                    <div key={index} className=\"flex gap-2\">\n                      <input\n                        type=\"text\"\n                        value={header.key}\n                        onChange={(e) => handleParamChange('header', index, 'key', e.target.value)}\n                        placeholder=\"Key\"\n                        className=\"flex-1 px-3 py-2 border rounded\"\n                      />\n                      <input\n                        type=\"text\"\n                        value={header.value}\n                        onChange={(e) => handleParamChange('header', index, 'value', e.target.value)}\n                        placeholder=\"Value\"\n                        className=\"flex-1 px-3 py-2 border rounded\"\n                      />\n                      <button\n                        onClick={() => handleRemoveParam('header', index)}\n                        className=\"px-3 text-red-500 hover:text-red-600\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n                  <button\n                    onClick={() => handleAddParam('header')}\n                    className=\"text-[#ff6b4a] font-medium hover:text-[#ff5436]\"\n                  >\n                    Add\n                  </button>\n                </div>\n              )}\n\n              {activeTab === 'body' && method !== 'GET' && (\n                <div className=\"space-y-4\">\n                  {/* Request Body Section */}\n                  <div className=\"border rounded bg-white\">\n                    <div className=\"flex justify-between items-center border-b px-3 py-2\">\n                      <div className=\"flex gap-4\">\n                        <button\n                          onClick={() => setRequestFormat('json')}\n                          className={`text-sm ${requestFormat === 'json' ? 'text-[#ff6b4a]' : 'text-gray-600'}`}\n                        >\n                          JSON\n                        </button>\n                        <button\n                          onClick={() => setRequestFormat('form')}\n                          className={`text-sm ${requestFormat === 'form' ? 'text-[#ff6b4a]' : 'text-gray-600'}`}\n                        >\n                          Form\n                        </button>\n                      </div>\n                      <button\n                        onClick={() => {\n                          try {\n                            const formatted = JSON.stringify(\n                              typeof requestBody === 'string' \n                                ? JSON.parse(requestBody) \n                                : requestBody, \n                              null, \n                              2\n                            );\n                            setRequestBody(formatted);\n                          } catch (e) {\n                            // Silently handle invalid JSON\n                            console.log('Could not format: Invalid JSON');\n                          }\n                        }}\n                        className=\"text-sm text-[#ff6b4a] hover:text-[#ff5436]\"\n                      >\n                        Format\n                      </button>\n                    </div>\n\n                    {/* Split View Container */}\n                    <div className=\"grid grid-cols-2 divide-x\">\n                      {/* Left Side - Raw JSON/Text */}\n                      <div className=\"p-4\">\n                        <textarea\n                          value={typeof requestBody === 'string' ? requestBody : JSON.stringify(requestBody, null, 2)}\n                          onChange={(e) => {\n                            if (requestFormat === 'json') {\n                              try {\n                                // Attempt to parse as JSON, but don't throw if invalid\n                                JSON.parse(e.target.value);\n                              } catch (error) {\n                                // Continue even if invalid JSON\n                              }\n                            }\n                            setRequestBody(e.target.value);\n                          }}\n                          placeholder={requestFormat === 'json' ? \"Enter JSON request body\" : \"Enter raw request body\"}\n                          className=\"w-full h-[300px] font-mono text-sm resize-none focus:outline-none\"\n                          spellCheck={false}\n                        />\n                      </div>\n\n                      {/* Right Side - Form View */}\n                      <div className=\"p-4\">\n                        {requestFormat === 'form' ? (\n                          <div className=\"space-y-2\">\n                            {Object.entries(\n                              typeof requestBody === 'string' \n                                ? JSON.parse(requestBody || '{}') \n                                : requestBody || {}\n                            ).map(([key, value], index) => (\n                              <div key={index} className=\"flex gap-2\">\n                                <input\n                                  type=\"text\"\n                                  value={key}\n                                  onChange={(e) => {\n                                    const newBody = { ...requestBody };\n                                    delete newBody[key];\n                                    newBody[e.target.value] = value;\n                                    setRequestBody(newBody);\n                                  }}\n                                  placeholder=\"Key\"\n                                  className=\"flex-1 px-3 py-2 border rounded\"\n                                />\n                                <input\n                                  type=\"text\"\n                                  value={value as string}\n                                  onChange={(e) => {\n                                    setRequestBody({\n                                      ...requestBody,\n                                      [key]: e.target.value\n                                    });\n                                  }}\n                                  placeholder=\"Value\"\n                                  className=\"flex-1 px-3 py-2 border rounded\"\n                                />\n                                <button\n                                  onClick={() => {\n                                    const newBody = { ...requestBody };\n                                    delete newBody[key];\n                                    setRequestBody(newBody);\n                                  }}\n                                  className=\"text-red-500 hover:text-red-600\"\n                                >\n                                  <FiTrash2 />\n                                </button>\n                              </div>\n                            ))}\n                            <button\n                              onClick={() => {\n                                const newBody = typeof requestBody === 'string' \n                                  ? JSON.parse(requestBody || '{}') \n                                  : { ...requestBody };\n                                newBody[''] = '';\n                                setRequestBody(newBody);\n                              }}\n                              className=\"text-[#ff6b4a] hover:text-[#ff5436] flex items-center gap-1\"\n                            >\n                              <FiPlus /> Add Field\n                            </button>\n                          </div>\n                        ) : (\n                          <div className=\"font-mono text-sm whitespace-pre-wrap\">\n                            {/* Preview formatted JSON */}\n                            {(() => {\n                              try {\n                                return JSON.stringify(\n                                  typeof requestBody === 'string' \n                                    ? JSON.parse(requestBody) \n                                    : requestBody,\n                                  null, \n                                  2\n                                );\n                              } catch (e) {\n                                return 'Invalid JSON';\n                              }\n                            })()}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Response Section with Separator */}\n            {response && (\n              <>\n                <div className=\"my-6 border-t border-gray-200\" />\n                \n                {/* Response Header */}\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"font-medium\">Response</h3>\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-600\">Status:</span>\n                      <span className={`font-medium ${\n                        response.status < 300 ? 'text-green-600' :\n                        response.status < 400 ? 'text-blue-600' :\n                        'text-red-600'\n                      }`}>\n                        {response.status}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-600\">Time:</span>\n                      <span className=\"font-medium\">{response.time || '200ms'}</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-600\">Size:</span>\n                      <span className=\"font-medium\">{JSON.stringify(response.data).length} bytes</span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Response Content - Fixed Height with Internal Scroll */}\n                <div className=\"grid grid-cols-2 gap-3\">\n                  {/* Response Body */}\n                  <div className=\"border rounded bg-white\">\n                    <div className=\"flex justify-between items-center border-b px-3 py-1 bg-white\">\n                      <span className=\"text-sm font-medium text-gray-700\">Body</span>\n                      <button\n                        onClick={() => downloadJson(response.data, 'response.json')}\n                        className=\"text-sm text-[#ff6b4a] hover:text-[#ff5436]\"\n                        title=\"Download JSON\"\n                      >\n                        <FiDownload size={14} />\n                      </button>\n                    </div>\n                    <div className=\"h-[400px] overflow-auto\">\n                      <div className=\"p-2 font-mono text-sm\">\n                        <JsonTreeView data={response.data} />\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Response Headers */}\n                  <div className=\"border rounded bg-white\">\n                    <div className=\"px-3 py-1 border-b bg-white\">\n                      <span className=\"text-sm font-medium text-gray-700\">Headers</span>\n                    </div>\n                    <div className=\"h-[400px] overflow-auto\">\n                      <div className=\"p-2 font-mono text-sm\">\n                        <JsonTreeView data={response.headers} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </section>\n      </main>\n\n      {/* History Sidebar - Keep as is */}\n      {showHistory && (\n        <div className=\"fixed right-0 top-0 h-screen w-[400px] bg-white border-l shadow-lg\">\n          <div className=\"flex justify-between items-center px-6 py-4 border-b shrink-0\">\n            <h2 className=\"text-lg font-medium\">Request History</h2>\n            <button\n              onClick={() => setShowHistory(false)}\n              className=\"text-gray-500 hover:text-gray-700\"\n            >\n              ✕\n            </button>\n          </div>\n\n          <div className=\"overflow-y-auto flex-1 p-4\">\n            <div className=\"space-y-2\">\n              {history.map(item => (\n                <div\n                  key={item.id}\n                  className=\"border rounded-lg hover:border-gray-300 transition-colors bg-white\"\n                >\n                  {/* Clickable Header */}\n                  <div \n                    className=\"p-3 flex items-center justify-between cursor-pointer\"\n                    onClick={() => setExpandedHistoryId(expandedHistoryId === item.id ? null : item.id)}\n                  >\n                    <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                      <span className={`px-2 py-1 rounded text-xs font-medium shrink-0 ${\n                        item.method === 'GET' ? 'bg-blue-100 text-blue-700' :\n                        item.method === 'POST' ? 'bg-green-100 text-green-700' :\n                        item.method === 'PUT' ? 'bg-yellow-100 text-yellow-700' :\n                        'bg-red-100 text-red-700'\n                      }`}>\n                        {item.method}\n                      </span>\n                      <span className=\"truncate font-mono text-xs text-gray-600\">\n                        {item.url}\n                      </span>\n                    </div>\n                    \n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        loadFromHistory(item);\n                      }}\n                      className=\"px-3 py-1 text-xs bg-[#ff6b4a] text-white rounded hover:bg-[#ff5436] shrink-0\"\n                    >\n                      Apply\n                    </button>\n                  </div>\n\n                  {/* Expanded Details */}\n                  {expandedHistoryId === item.id && (\n                    <div className=\"border-t px-3 py-2 text-xs\">\n                      <div className=\"space-y-2\">\n                        {/* Request Details */}\n                        <div className=\"space-y-1\">\n                          <div className=\"text-gray-500\">\n                            {new Date(item.timestamp).toLocaleString()}\n                          </div>\n                          <div className=\"flex gap-2\">\n                            {item.queryParams.some(p => p.key) && (\n                              <span className=\"px-2 py-0.5 bg-gray-100 rounded\">\n                                {item.queryParams.filter(p => p.key).length} params\n                              </span>\n                            )}\n                            {item.headers.some(h => h.key) && (\n                              <span className=\"px-2 py-0.5 bg-gray-100 rounded\">\n                                {item.headers.filter(h => h.key).length} headers\n                              </span>\n                            )}\n                            {item.body && Object.keys(item.body).length > 0 && (\n                              <span className=\"px-2 py-0.5 bg-gray-100 rounded\">\n                                {typeof item.body === 'object' ? 'JSON' : 'Form'} body\n                              </span>\n                            )}\n                          </div>\n                        </div>\n\n                        {/* Response Preview */}\n                        {item.response && (\n                          <div className=\"border-t pt-2 mt-2\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <span className={`font-medium ${\n                                item.response.status < 300 ? 'text-green-600' :\n                                item.response.status < 400 ? 'text-blue-600' :\n                                'text-red-600'\n                              }`}>\n                                Status: {item.response.status}\n                              </span>\n                            </div>\n                            <div className=\"bg-gray-50 border rounded p-2 max-h-[100px] overflow-auto font-mono\">\n                              {JSON.stringify(item.response.data, null, 2)}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}