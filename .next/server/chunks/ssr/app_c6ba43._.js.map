{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/components/RouteTest.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { RouteConfig, RequestBody, ApiResponse } from '../types/route';\r\nimport { FiCopy, FiChevronDown, FiChevronUp } from 'react-icons/fi';\r\n\r\ninterface RouteTestProps {\r\n  route: RouteConfig;\r\n}\r\n\r\nconst routes = [\r\n  {\r\n    name: 'getAllClients',\r\n    method: 'GET',\r\n    path: '/api/client/getAllClients',\r\n    description: 'Get all clients'\r\n  },\r\n  {\r\n    name: 'getClientById',\r\n    method: 'GET',\r\n    path: '/api/client/getClientById',\r\n    description: 'Get client by ID'\r\n  },\r\n  {\r\n    name: 'updateClientById',\r\n    method: 'PUT',\r\n    path: '/api/client/updateClient',\r\n    description: 'Update client'\r\n  },\r\n  {\r\n    name: 'deleteClientById',\r\n    method: 'DELETE',\r\n    path: '/api/client/deleteClient',\r\n    description: 'Delete client'\r\n  },\r\n  {\r\n    name: 'createClient',\r\n    method: 'POST',\r\n    path: '/api/client/createClient',\r\n    description: 'Create a new client',\r\n    body: {\r\n      clientName: 'Test Client'\r\n    }\r\n  },\r\n];\r\n\r\nexport default function RouteTest({ route }: RouteTestProps) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  \r\n  // Set default request body based on route\r\n  const getDefaultRequestBody = () => {\r\n    if (route.path === '/api/clients/createClient') {\r\n      return JSON.stringify({\r\n        clientName: \"string\", // Only field needed in request body\r\n        // These fields will be added by backend:\r\n        // uuid: \"auto-generated\",\r\n        // createdAt: \"auto-generated\",\r\n        // createdBy: \"system\",\r\n        // tags: [],\r\n        // status: {\r\n        //   isActive: true,\r\n        //   lastUpdated: \"auto-generated\"\r\n        // }\r\n      }, null, 2);\r\n    }\r\n    return '{}';\r\n  };\r\n\r\n  const [requestBody, setRequestBody] = useState(getDefaultRequestBody());\r\n  const [pathParams, setPathParams] = useState<Record<string, string>>({});\r\n  const [response, setResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getMethodColor = (method: string) => {\r\n    const colors = {\r\n      GET: 'bg-[#61affe] hover:bg-[#4fa3ef]',\r\n      POST: 'bg-[#49cc90] hover:bg-[#41b883]',\r\n      PUT: 'bg-[#fca130] hover:bg-[#f59324]',\r\n      DELETE: 'bg-[#f93e3e] hover:bg-[#e53935]'\r\n    };\r\n    return colors[method as keyof typeof colors] || 'bg-gray-500';\r\n  };\r\n\r\n  const getMethodBg = (method: string) => {\r\n    const colors = {\r\n      GET: 'bg-[#ebf3fb]',\r\n      POST: 'bg-[#e8f6f0]',\r\n      PUT: 'bg-[#fff6eb]',\r\n      DELETE: 'bg-[#fae7e7]'\r\n    };\r\n    return colors[method as keyof typeof colors] || 'bg-gray-50';\r\n  };\r\n\r\n  const handleTest = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let url = route.path;\r\n      \r\n      // For getClientById, updateClient, and deleteClient, convert path param to query param\r\n      if (route.path.includes('{id}')) {\r\n        const baseUrl = route.path.split('/{id}')[0];\r\n        url = `${baseUrl}?id=${pathParams.id}`;\r\n      }\r\n\r\n      url = `${process.env.NEXT_PUBLIC_API_URL}${url}`;\r\n\r\n      let body: RequestBody = {};\r\n      try {\r\n        body = JSON.parse(requestBody);\r\n      } catch (e) {\r\n        console.error('Invalid JSON:', e);\r\n        setResponse({\r\n          status: 400,\r\n          data: null,\r\n          error: 'Invalid JSON in request body'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Log request details\r\n      console.log('Request:', {\r\n        url,\r\n        method: route.method,\r\n        body: route.method !== 'GET' ? body : undefined\r\n      });\r\n\r\n      const response = await fetch(url, {\r\n        method: route.method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: route.method !== 'GET' ? JSON.stringify(body) : undefined,\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      // Log response details\r\n      console.log('Response:', {\r\n        status: response.status,\r\n        data\r\n      });\r\n\r\n      setResponse({\r\n        status: response.status,\r\n        data,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setResponse({\r\n        status: 500,\r\n        data: null,\r\n        error: error instanceof Error ? error.message : 'Unknown error occurred'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTestRoute = async (route: string) => {\r\n    setLoading(true);\r\n    try {\r\n      let response: Response | undefined;\r\n      \r\n      switch (route) {\r\n        case 'getAllClients':\r\n          response = await fetch('/api/client/getAllClients');\r\n          break;\r\n          \r\n        case 'getClientById':\r\n          response = await fetch('/api/client/getClientById');\r\n          break;\r\n          \r\n        case 'createClient':\r\n          response = await fetch('/api/client/createClient', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              clientName: 'Test Client'\r\n            }),\r\n          });\r\n          break;\r\n          \r\n        default:\r\n          throw new Error('Invalid route');\r\n      }\r\n\r\n      if (!response) {\r\n        throw new Error('No response received');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setResponse(data);\r\n    } catch (error) {\r\n      console.error('Error testing route:', error);\r\n      setResponse({ status: 500, data: null, error: 'Failed to test route' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-3 overflow-hidden rounded-lg border border-gray-200 shadow-sm\">\r\n      {/* Header */}\r\n      <div className={`${getMethodBg(route.method)} transition-colors duration-200`}>\r\n        <div className=\"flex items-center p-2\">\r\n          <span className={`${getMethodColor(route.method)} px-3 py-1 rounded text-white font-medium transition-colors duration-200`}>\r\n            {route.method}\r\n          </span>\r\n          <span className=\"ml-3 font-mono text-sm text-gray-700\">{route.path}</span>\r\n          <span className=\"ml-4 text-gray-600 text-sm\">{route.description}</span>\r\n          <button \r\n            onClick={() => setIsExpanded(!isExpanded)}\r\n            className=\"ml-auto p-1 text-gray-500 hover:text-gray-700 transition-colors\"\r\n          >\r\n            {isExpanded ? <FiChevronUp size={20} /> : <FiChevronDown size={20} />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {isExpanded && (\r\n        <div className=\"border-t\">\r\n          <div className=\"p-4\">\r\n            {/* Parameters Section */}\r\n            <div className=\"mb-6\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h3 className=\"text-lg font-medium text-gray-700\">Parameters</h3>\r\n                <button\r\n                  onClick={handleTest}\r\n                  className=\"px-4 py-1.5 text-sm border rounded-md hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  Try it out\r\n                </button>\r\n              </div>\r\n\r\n              <table className=\"w-full border-collapse\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-left p-3 border bg-gray-50 text-gray-600 font-medium\">Name</th>\r\n                    <th className=\"text-left p-3 border bg-gray-50 text-gray-600 font-medium\">Description</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {route.path.split('/').map(part => {\r\n                    if (part.startsWith('{') && part.endsWith('}')) {\r\n                      const param = part.slice(1, -1);\r\n                      return (\r\n                        <tr key={param} className=\"border-b\">\r\n                          <td className=\"p-3 border align-top\">\r\n                            <div>\r\n                              <span className=\"font-mono text-sm\">{param}</span>\r\n                              <span className=\"text-red-500 ml-1\">*</span>\r\n                              <div className=\"text-xs text-gray-500 mt-1\">\r\n                                integer($int64)\r\n                                <br />\r\n                                (path)\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"p-3 border\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"w-full p-2 border rounded-md text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all\"\r\n                              value={pathParams[param] || ''}\r\n                              onChange={(e) => setPathParams({\r\n                                ...pathParams,\r\n                                [param]: e.target.value\r\n                              })}\r\n                              placeholder={`ID of ${param} that needs to be updated`}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    }\r\n                    return null;\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Request Body Section */}\r\n            {route.method !== 'GET' && (\r\n              <div className=\"mb-6\">\r\n                <div className=\"mb-2\">\r\n                  <div className=\"flex items-center\">\r\n                    <span className=\"text-gray-700\">body</span>\r\n                    <span className=\"text-red-500 ml-1\">*</span>\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    object\r\n                    <br />\r\n                    (body)\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center mb-2\">\r\n                  <span className=\"text-sm text-gray-600\">Parameter content type:</span>\r\n                  <select className=\"ml-2 text-sm border rounded-md p-1.5\">\r\n                    <option>application/json</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"relative\">\r\n                  <div className=\"text-xs text-gray-500 mb-2\">\r\n                    Example Value | Model\r\n                  </div>\r\n                  <div className=\"bg-[#1e1e1e] text-white rounded p-4\">\r\n                    <pre className=\"font-mono text-sm whitespace-pre\">\r\n                      {route.path === '/api/clients/createClient' ? \r\n`{\r\n  // Request body fields\r\n  \"clientName\": \"string\",\r\n\r\n  // Auto-generated fields (for reference)\r\n  \"uuid\": \"auto-generated\",\r\n  \"createdAt\": \"auto-generated\",\r\n  \"createdBy\": \"system\",\r\n  \"tags\": [],\r\n  \"status\": {\r\n    \"isActive\": true,\r\n    \"lastUpdated\": \"auto-generated\"\r\n  }\r\n}`\r\n                        : requestBody}\r\n                    </pre>\r\n                  </div>\r\n                  <textarea\r\n                    className=\"w-full h-48 p-3 border rounded-md font-mono text-sm bg-gray-50 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all mt-2\"\r\n                    value={requestBody}\r\n                    onChange={(e) => setRequestBody(e.target.value)}\r\n                    placeholder=\"Enter request body...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Response Section */}\r\n            {response && (\r\n              <div className=\"border-t pt-6\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-700\">Responses</h3>\r\n                  <div className=\"flex items-center\">\r\n                    <span className=\"text-sm text-gray-600\">Response content type:</span>\r\n                    <select className=\"ml-2 text-sm border rounded-md p-1.5\">\r\n                      <option>application/json</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"relative\">\r\n                  <pre className=\"p-4 bg-gray-50 rounded-md border overflow-auto font-mono text-sm\">\r\n                    {JSON.stringify(response.data, null, 2)}\r\n                  </pre>\r\n                  <button\r\n                    onClick={() => navigator.clipboard.writeText(JSON.stringify(response.data, null, 2))}\r\n                    className=\"absolute top-2 right-2 p-1.5 text-gray-400 hover:text-gray-600 transition-colors\"\r\n                  >\r\n                    <FiCopy size={16} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/components/RouteGroup.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { RouteConfig, ApiResponse } from 'app/types/route';\r\nimport RouteTest from './RouteTest';\r\n\r\ninterface RouteGroupProps {\r\n  title: string;\r\n  routes: RouteConfig[];\r\n}\r\n\r\nexport default function RouteGroup({ title, routes }: RouteGroupProps) {\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n\r\n  return (\r\n    <div className=\"border rounded-lg overflow-hidden mb-4\">\r\n      <button\r\n        className=\"w-full px-4 py-2 bg-gray-100 hover:bg-gray-200 text-left font-semibold flex justify-between items-center\"\r\n        onClick={() => setIsExpanded(!isExpanded)}\r\n      >\r\n        <span>{title}</span>\r\n        <span>{isExpanded ? '▼' : '▶'}</span>\r\n      </button>\r\n      \r\n      {isExpanded && (\r\n        <div className=\"p-4 space-y-4\">\r\n          {routes.map((route) => (\r\n            <RouteTest key={`${route.method}-${route.path}`} route={route} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AAWe,SAAS,WAAW,EAAE,KAAK,EAAE,MAAM,EAAmB;IACnE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,SAAS,IAAM,cAAc,CAAC;;kCAE9B,8OAAC;kCAAM;;;;;;kCACP,8OAAC;kCAAM,aAAa,MAAM;;;;;;;;;;;;YAG3B,4BACC,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC,+HAAA,CAAA,UAAS;wBAAuC,OAAO;uBAAxC,GAAG,MAAM,MAAM,CAAC,CAAC,EAAE,MAAM,IAAI,EAAE;;;;;;;;;;;;;;;;AAM3D"}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}