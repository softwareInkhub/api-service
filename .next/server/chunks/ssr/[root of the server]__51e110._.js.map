{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/components/RouteTest.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { RouteConfig, RequestBody, ApiResponse } from '../types/route';\r\n\r\ninterface RouteTestProps {\r\n  route: RouteConfig;\r\n}\r\n\r\nexport default function RouteTest({ route }: RouteTestProps) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [requestBody, setRequestBody] = useState('{\\n  \"phone\": \"string\",\\n  \"email\": \"string\",\\n  \"address\": {\\n    \"city\": \"string\",\\n    \"street\": \"string\",\\n    \"home_number\": \"string\"\\n  }\\n}');\r\n  const [pathParams, setPathParams] = useState<Record<string, string>>({});\r\n  const [response, setResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getMethodStyles = (method: string) => {\r\n    const styles = {\r\n      GET: 'bg-[#61affe]',\r\n      POST: 'bg-[#49cc90]',\r\n      PUT: 'bg-[#fca130]',\r\n      DELETE: 'bg-[#f93e3e]'\r\n    };\r\n    return `${styles[method as keyof typeof styles]} border-[#e8f5e9]`;\r\n  };\r\n\r\n  const handleTest = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let url = route.path;\r\n      Object.entries(pathParams).forEach(([key, value]) => {\r\n        url = url.replace(`{${key}}`, value);\r\n      });\r\n      url = `${process.env.NEXT_PUBLIC_API_URL}${url}`;\r\n\r\n      let body: RequestBody = {};\r\n      try {\r\n        body = JSON.parse(requestBody);\r\n      } catch (e) {\r\n        setResponse({\r\n          status: 400,\r\n          data: null,\r\n          error: 'Invalid JSON in request body'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(url, {\r\n        method: route.method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: route.method !== 'GET' ? JSON.stringify(body) : undefined,\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResponse({\r\n        status: response.status,\r\n        data,\r\n      });\r\n    } catch (error) {\r\n      setResponse({\r\n        status: 500,\r\n        data: null,\r\n        error: error instanceof Error ? error.message : 'Unknown error occurred'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border rounded overflow-hidden mb-2\">\r\n      <div className={`${getMethodStyles(route.method)} p-2`}>\r\n        <div className=\"flex items-center\">\r\n          <span className=\"text-white font-bold px-2\">{route.method}</span>\r\n          <span className=\"text-[#3b4151] ml-2 font-mono\">{route.path}</span>\r\n          <span className=\"text-[#3b4151] ml-4\">{route.description}</span>\r\n          <button \r\n            onClick={() => setIsExpanded(!isExpanded)}\r\n            className=\"ml-auto text-[#3b4151]\"\r\n          >\r\n            {isExpanded ? '▼' : '▲'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {isExpanded && (\r\n        <div className=\"bg-white\">\r\n          {/* Parameters Section */}\r\n          <div className=\"p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-[#3b4151]\">Parameters</h3>\r\n              <button\r\n                onClick={handleTest}\r\n                className=\"px-4 py-1 text-sm border rounded hover:bg-gray-50\"\r\n              >\r\n                Try it out\r\n              </button>\r\n            </div>\r\n\r\n            <table className=\"w-full border-collapse\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-left p-2 border bg-[#fafafa] text-[#3b4151] font-semibold\">Name</th>\r\n                  <th className=\"text-left p-2 border bg-[#fafafa] text-[#3b4151] font-semibold\">Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {route.path.split('/').map(part => {\r\n                  if (part.startsWith('{') && part.endsWith('}')) {\r\n                    const param = part.slice(1, -1);\r\n                    return (\r\n                      <tr key={param} className=\"border-b\">\r\n                        <td className=\"p-2 border align-top\">\r\n                          <div>\r\n                            <span className=\"text-[#3b4151] font-mono\">{param}</span>\r\n                            <span className=\"text-red-500 ml-1\">*</span>\r\n                            <div className=\"text-xs text-gray-600\">\r\n                              integer($int64)\r\n                              <br />\r\n                              (path)\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"p-2 border\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"w-full p-1 border rounded\"\r\n                            value={pathParams[param] || ''}\r\n                            onChange={(e) => setPathParams({\r\n                              ...pathParams,\r\n                              [param]: e.target.value\r\n                            })}\r\n                            placeholder={`ID of ${param} that needs to be updated`}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })}\r\n              </tbody>\r\n            </table>\r\n\r\n            {/* Request Body Section */}\r\n            {route.method !== 'GET' && (\r\n              <div className=\"mt-6\">\r\n                <div className=\"mb-2\">\r\n                  <span className=\"text-[#3b4151]\">body</span>\r\n                  <span className=\"text-red-500 ml-1\">*</span>\r\n                  <div className=\"text-xs text-gray-600\">\r\n                    object\r\n                    <br />\r\n                    (body)\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                  <span className=\"text-gray-600 text-sm\">Parameter content type</span>\r\n                  <select className=\"ml-2 border rounded p-1 text-sm\">\r\n                    <option>application/json</option>\r\n                  </select>\r\n                </div>\r\n                <textarea\r\n                  className=\"w-full h-48 p-2 border rounded font-mono text-sm\"\r\n                  value={requestBody}\r\n                  onChange={(e) => setRequestBody(e.target.value)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Response Section */}\r\n          {response && (\r\n            <div className=\"p-4 border-t\">\r\n              <div className=\"flex justify-between items-center mb-2\">\r\n                <h3 className=\"text-[#3b4151]\">Responses</h3>\r\n                <div>\r\n                  <span className=\"text-gray-600 text-sm\">Response content type</span>\r\n                  <select className=\"ml-2 border rounded p-1 text-sm\">\r\n                    <option>application/json</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <pre className=\"bg-[#fafafa] p-4 rounded border overflow-auto font-mono text-sm\">\r\n                {JSON.stringify(response.data, null, 2)}\r\n              </pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/components/RouteGroup.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { RouteConfig, ApiResponse } from 'app/types/route';\r\nimport RouteTest from './RouteTest';\r\n\r\ninterface RouteGroupProps {\r\n  title: string;\r\n  routes: RouteConfig[];\r\n}\r\n\r\nexport default function RouteGroup({ title, routes }: RouteGroupProps) {\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n\r\n  return (\r\n    <div className=\"border rounded-lg overflow-hidden mb-4\">\r\n      <button\r\n        className=\"w-full px-4 py-2 bg-gray-100 hover:bg-gray-200 text-left font-semibold flex justify-between items-center\"\r\n        onClick={() => setIsExpanded(!isExpanded)}\r\n      >\r\n        <span>{title}</span>\r\n        <span>{isExpanded ? '▼' : '▶'}</span>\r\n      </button>\r\n      \r\n      {isExpanded && (\r\n        <div className=\"p-4 space-y-4\">\r\n          {routes.map((route) => (\r\n            <RouteTest key={`${route.method}-${route.path}`} route={route} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AAWe,SAAS,WAAW,EAAE,KAAK,EAAE,MAAM,EAAmB;IACnE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,SAAS,IAAM,cAAc,CAAC;;kCAE9B,8OAAC;kCAAM;;;;;;kCACP,8OAAC;kCAAM,aAAa,MAAM;;;;;;;;;;;;YAG3B,4BACC,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC,+HAAA,CAAA,UAAS;wBAAuC,OAAO;uBAAxC,GAAG,MAAM,MAAM,CAAC,CAAC,EAAE,MAAM,IAAI,EAAE;;;;;;;;;;;;;;;;AAM3D"}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 566, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}