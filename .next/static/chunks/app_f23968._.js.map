{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/components/JsonTreeView.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { FiChevronRight, FiChevronDown } from 'react-icons/fi';\r\n\r\ninterface JsonTreeViewProps {\r\n  data: any;\r\n  level?: number;\r\n  isLast?: boolean;\r\n  startLine?: number;\r\n}\r\n\r\nexport default function JsonTreeView({ \r\n  data, \r\n  level = 0, \r\n  isLast = true, \r\n  startLine = 1 \r\n}: JsonTreeViewProps) {\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n  const indent = level * 20;\r\n  const [lineNumber, setLineNumber] = useState(startLine);\r\n\r\n  if (data === null) return (\r\n    <div className=\"flex\">\r\n      <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">{lineNumber}</span>\r\n      <span className=\"text-gray-500\">null</span>\r\n    </div>\r\n  );\r\n\r\n  if (typeof data !== 'object') {\r\n    return (\r\n      <div className=\"flex\">\r\n        <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">{lineNumber}</span>\r\n        <span className={\r\n          typeof data === 'string' ? 'text-green-600' :\r\n          typeof data === 'number' ? 'text-blue-600' :\r\n          typeof data === 'boolean' ? 'text-purple-600' : 'text-gray-600'\r\n        }>\r\n          {JSON.stringify(data)}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isArray = Array.isArray(data);\r\n  const items = Object.entries(data);\r\n  let currentLine = lineNumber;\r\n\r\n  return (\r\n    <div style={{ marginLeft: indent }}>\r\n      <div className=\"flex items-center\">\r\n        <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">{currentLine++}</span>\r\n        <button\r\n          onClick={() => setIsExpanded(!isExpanded)}\r\n          className=\"p-1 hover:bg-gray-100 rounded\"\r\n          data-tree-toggle\r\n          data-expanded={isExpanded}\r\n        >\r\n          {isExpanded ? <FiChevronDown size={14} /> : <FiChevronRight size={14} />}\r\n        </button>\r\n        <span className=\"text-gray-800\">\r\n          {isArray ? '[' : '{'}\r\n        </span>\r\n      </div>\r\n      \r\n      {isExpanded && (\r\n        <div className=\"ml-4\">\r\n          {items.map(([key, value], index) => (\r\n            <div key={key} className=\"flex\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-gray-800\">\r\n                    {isArray ? '' : (\r\n                      <>\r\n                        <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">\r\n                          {currentLine++}\r\n                        </span>\r\n                        {`\"${key}\": `}\r\n                      </>\r\n                    )}\r\n                  </span>\r\n                  <JsonTreeView\r\n                    data={value}\r\n                    level={level + 1}\r\n                    isLast={index === items.length - 1}\r\n                    startLine={currentLine}\r\n                  />\r\n                </div>\r\n                {!isLast && index !== items.length - 1 && (\r\n                  <span className=\"text-gray-800\">,</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n      <div style={{ marginLeft: indent }}>\r\n        <div className=\"flex\">\r\n          <span className=\"w-8 text-right pr-2 text-gray-400 select-none text-xs\">{currentLine}</span>\r\n          <span className=\"text-gray-800\">\r\n            {isArray ? ']' : '}'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;;AASe,SAAS,aAAa,EACnC,IAAI,EACJ,QAAQ,CAAC,EACT,SAAS,IAAI,EACb,YAAY,CAAC,EACK;;IAClB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,SAAS,QAAQ;IACvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,IAAI,SAAS,MAAM,qBACjB,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAK,WAAU;0BAAyD;;;;;;0BACzE,6LAAC;gBAAK,WAAU;0BAAgB;;;;;;;;;;;;IAIpC,IAAI,OAAO,SAAS,UAAU;QAC5B,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;8BAAyD;;;;;;8BACzE,6LAAC;oBAAK,WACJ,OAAO,SAAS,WAAW,mBAC3B,OAAO,SAAS,WAAW,kBAC3B,OAAO,SAAS,YAAY,oBAAoB;8BAE/C,KAAK,SAAS,CAAC;;;;;;;;;;;;IAIxB;IAEA,MAAM,UAAU,MAAM,OAAO,CAAC;IAC9B,MAAM,QAAQ,OAAO,OAAO,CAAC;IAC7B,IAAI,cAAc;IAElB,qBACE,6LAAC;QAAI,OAAO;YAAE,YAAY;QAAO;;0BAC/B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAyD;;;;;;kCACzE,6LAAC;wBACC,SAAS,IAAM,cAAc,CAAC;wBAC9B,WAAU;wBACV,kBAAgB;wBAChB,iBAAe;kCAEd,2BAAa,6LAAC,iJAAA,CAAA,gBAAa;4BAAC,MAAM;;;;;iDAAS,6LAAC,iJAAA,CAAA,iBAAc;4BAAC,MAAM;;;;;;;;;;;kCAEpE,6LAAC;wBAAK,WAAU;kCACb,UAAU,MAAM;;;;;;;;;;;;YAIpB,4BACC,6LAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE,sBACxB,6LAAC;wBAAc,WAAU;kCACvB,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDACb,UAAU,mBACT;;kEACE,6LAAC;wDAAK,WAAU;kEACb;;;;;;oDAEF,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC;;;;;;;;sDAInB,6LAAC;4CACC,MAAM;4CACN,OAAO,QAAQ;4CACf,QAAQ,UAAU,MAAM,MAAM,GAAG;4CACjC,WAAW;;;;;;;;;;;;gCAGd,CAAC,UAAU,UAAU,MAAM,MAAM,GAAG,mBACnC,6LAAC;oCAAK,WAAU;8CAAgB;;;;;;;;;;;;uBArB5B;;;;;;;;;;0BA6BhB,6LAAC;gBAAI,OAAO;oBAAE,YAAY;gBAAO;0BAC/B,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAK,WAAU;sCAAyD;;;;;;sCACzE,6LAAC;4BAAK,WAAU;sCACb,UAAU,MAAM;;;;;;;;;;;;;;;;;;;;;;;AAM7B;GA/FwB;KAAA"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/workspace/api-service-backend/client/app/api-tester/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { FiSend, FiPlus, FiTrash2, FiClock, FiSearch, FiMaximize2, FiMinimize2, FiDownload } from 'react-icons/fi';\r\nimport dynamic from 'next/dynamic';\r\nimport type { default as JsonEditorType } from 'react-json-editor-ajrm';\r\nimport JsonTreeView from '../components/JsonTreeView';\r\nimport SaveTemplateModal from '../components/SaveTemplateModal';\r\n\r\n// Create a type for the component props\r\ninterface JsonEditorProps {\r\n  id?: string;\r\n  placeholder?: any;\r\n  locale?: any;\r\n  viewOnly?: boolean;\r\n  onChange?: (value: any) => void;\r\n  colors?: {\r\n    background: string;\r\n    default: string;\r\n  };\r\n  height?: string;\r\n  width?: string;\r\n  reset?: boolean;\r\n  modifyErrorText?: (error: string) => string;\r\n}\r\n\r\n// Update the dynamic import\r\nconst JsonEditor = dynamic<JsonEditorProps>(() =>\r\n  import('react-json-editor-ajrm').then(mod => mod.default)\r\n  , { ssr: false });\r\n\r\ninterface KeyValuePair {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\ninterface RequestHistory {\r\n  id: string;\r\n  timestamp: number;\r\n  method: string;\r\n  url: string;\r\n  queryParams: KeyValuePair[];\r\n  headers: KeyValuePair[];\r\n  body: any;\r\n  response?: {\r\n    status: number;\r\n    data: any;\r\n    headers: any;\r\n  };\r\n}\r\n\r\ninterface JsonEditorLocale {\r\n  format: string;\r\n  type: string;\r\n  value: string;\r\n  validation: string;\r\n  nonAlphanumeric: string;\r\n  quote: string;\r\n  alpha: string;\r\n  digit: string;\r\n  punct: string;\r\n  space: string;\r\n  safe: string;\r\n  unicode: string;\r\n  escape: string;\r\n}\r\n\r\nconst locale: JsonEditorLocale = {\r\n  format: \"Format\",\r\n  type: \"Type\",\r\n  value: \"Value\",\r\n  validation: \"Validation\",\r\n  nonAlphanumeric: \"Non-alphanumeric\",\r\n  quote: \"Quote\",\r\n  alpha: \"Alpha\",\r\n  digit: \"Digit\",\r\n  punct: \"Punctuation\",\r\n  space: \"Space\",\r\n  safe: \"Safe\",\r\n  unicode: \"Unicode\",\r\n  escape: \"Escape\"\r\n};\r\n\r\n// Add this helper function at the top level\r\nconst formatJson = (json: any): string => {\r\n  try {\r\n    return JSON.stringify(json, null, 2);\r\n  } catch (e) {\r\n    return '';\r\n  }\r\n};\r\n\r\n// Add this helper function\r\nconst downloadJson = (data: any, filename: string) => {\r\n  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = filename;\r\n  a.click();\r\n  window.URL.revokeObjectURL(url);\r\n};\r\n\r\nexport default function ApiTester() {\r\n  const [activeTab, setActiveTab] = useState<'params' | 'headers' | 'body'>('params');\r\n  const [responseTab, setResponseTab] = useState<'body' | 'headers'>('body');\r\n  const [method, setMethod] = useState('GET');\r\n  const [url, setUrl] = useState('');\r\n  const [queryParams, setQueryParams] = useState<KeyValuePair[]>([{ key: '', value: '' }]);\r\n  const [headers, setHeaders] = useState<KeyValuePair[]>([{ key: '', value: '' }]);\r\n  const [requestBody, setRequestBody] = useState<any>({});\r\n  const [response, setResponse] = useState<any>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [history, setHistory] = useState<RequestHistory[]>([]);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [urlSuggestions, setUrlSuggestions] = useState<string[]>([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [requestFormat, setRequestFormat] = useState<'json' | 'form'>('json');\r\n  const [expandedHistoryId, setExpandedHistoryId] = useState<string | null>(null);\r\n  const [showSaveTemplate, setShowSaveTemplate] = useState(false);\r\n\r\n  // Load history from localStorage on mount\r\n  useEffect(() => {\r\n    const savedHistory = localStorage.getItem('apiRequestHistory');\r\n    if (savedHistory) {\r\n      setHistory(JSON.parse(savedHistory));\r\n    }\r\n  }, []);\r\n\r\n  // Save history to localStorage when it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('apiRequestHistory', JSON.stringify(history));\r\n  }, [history]);\r\n\r\n  // Update URL suggestions when typing\r\n  useEffect(() => {\r\n    if (url.trim()) {\r\n      const suggestions = history\r\n        .filter(h => h.url.toLowerCase().includes(url.toLowerCase()))\r\n        .map(h => h.url)\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n        .slice(0, 5);\r\n      setUrlSuggestions(suggestions);\r\n      setShowSuggestions(suggestions.length > 0);\r\n    } else {\r\n      setShowSuggestions(false);\r\n    }\r\n  }, [url, history]);\r\n\r\n  const handleAddParam = (type: 'query' | 'header') => {\r\n    if (type === 'query') {\r\n      setQueryParams([...queryParams, { key: '', value: '' }]);\r\n    } else {\r\n      setHeaders([...headers, { key: '', value: '' }]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveParam = (type: 'query' | 'header', index: number) => {\r\n    if (type === 'query') {\r\n      setQueryParams(queryParams.filter((_, i) => i !== index));\r\n    } else {\r\n      setHeaders(headers.filter((_, i) => i !== index));\r\n    }\r\n  };\r\n\r\n  const handleParamChange = (\r\n    type: 'query' | 'header',\r\n    index: number,\r\n    field: 'key' | 'value',\r\n    value: string\r\n  ) => {\r\n    if (type === 'query') {\r\n      const newParams = [...queryParams];\r\n      newParams[index][field] = value;\r\n      setQueryParams(newParams);\r\n    } else {\r\n      const newHeaders = [...headers];\r\n      newHeaders[index][field] = value;\r\n      setHeaders(newHeaders);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const queryParamsObj = queryParams.reduce((acc, { key, value }) => {\r\n        if (key) acc[key] = value;\r\n        return acc;\r\n      }, {} as Record<string, string>);\r\n\r\n      const headersObj = headers.reduce((acc, { key, value }) => {\r\n        if (key) acc[key] = value;\r\n        return acc;\r\n      }, {} as Record<string, string>);\r\n\r\n      // Fix: Properly handle request body based on format and tab\r\n      let processedBody = undefined;\r\n      if (method !== 'GET' && activeTab === 'body') {\r\n        if (requestFormat === 'json') {\r\n          processedBody = requestBody;\r\n        } else if (requestFormat === 'form') {\r\n          // Convert form data to object\r\n          processedBody = Object.fromEntries(\r\n            Object.entries(requestBody).filter(([key]) => key.trim() !== '')\r\n          );\r\n        }\r\n      }\r\n\r\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/openApi/openapi`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          method,\r\n          url,\r\n          queryParams: queryParamsObj,\r\n          headers: headersObj,\r\n          body: processedBody // Use processed body here\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResponse(data);\r\n\r\n      // Add to history with full response\r\n      const historyItem: RequestHistory = {\r\n        id: Date.now().toString(),\r\n        timestamp: Date.now(),\r\n        method,\r\n        url,\r\n        queryParams,\r\n        headers,\r\n        body: processedBody,\r\n        response: {\r\n          status: data.status,\r\n          data: data.data,\r\n          headers: data.headers\r\n        }\r\n      };\r\n      setHistory(prev => [historyItem, ...prev.slice(0, 19)]);\r\n    } catch (error) {\r\n      setResponse({\r\n        error: 'Failed to make request',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadFromHistory = (item: RequestHistory) => {\r\n    setMethod(item.method);\r\n    setUrl(item.url);\r\n    setQueryParams(item.queryParams.length ? item.queryParams : [{ key: '', value: '' }]);\r\n    setHeaders(item.headers.length ? item.headers : [{ key: '', value: '' }]);\r\n    \r\n    if (item.body) {\r\n      setRequestBody(item.body);\r\n      setRequestFormat(Array.isArray(item.body) || typeof item.body === 'object' ? 'json' : 'form');\r\n    } else {\r\n      setRequestBody({});\r\n    }\r\n\r\n    // Set appropriate tab based on data\r\n    if (item.body && Object.keys(item.body).length > 0) {\r\n      setActiveTab('body');\r\n    } else if (item.queryParams.some(p => p.key)) {\r\n      setActiveTab('params');\r\n    } else if (item.headers.some(h => h.key)) {\r\n      setActiveTab('headers');\r\n    }\r\n\r\n    // Set response data if available\r\n    if (item.response) {\r\n      setResponse({\r\n        status: item.response.status,\r\n        data: item.response.data,\r\n        headers: item.response.headers\r\n      });\r\n      setResponseTab('body');\r\n    }\r\n    \r\n    setShowHistory(false);\r\n  };\r\n\r\n  const saveTemplate = (template: Omit<ClientMethodTemplate, 'id' | 'createdAt' | 'updatedAt'>) => {\r\n    const savedTemplates = JSON.parse(localStorage.getItem('clientMethodTemplates') || '[]');\r\n    const newTemplate: ClientMethodTemplate = {\r\n      ...template,\r\n      id: Date.now().toString(),\r\n      createdAt: Date.now(),\r\n      updatedAt: Date.now()\r\n    };\r\n    \r\n    localStorage.setItem('clientMethodTemplates', JSON.stringify([newTemplate, ...savedTemplates]));\r\n    setShowSaveTemplate(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen bg-[#f8f8f8]\">\r\n      <div className=\"p-4\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h1 className=\"text-2xl font-bold\">OPEN API</h1>\r\n          <button\r\n            onClick={() => setShowHistory(!showHistory)}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800\"\r\n          >\r\n            <FiClock />\r\n            History\r\n          </button>\r\n        </div>\r\n\r\n        {/* History Overlay */}\r\n        {showHistory && (\r\n          <div className=\"fixed right-0 top-0 h-screen w-[400px] bg-white border-l shadow-lg flex flex-col z-50\">\r\n            <div className=\"flex justify-between items-center px-6 py-4 border-b shrink-0\">\r\n              <h2 className=\"text-lg font-medium\">Request History</h2>\r\n              <button\r\n                onClick={() => setShowHistory(false)}\r\n                className=\"text-gray-500 hover:text-gray-700\"\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"overflow-y-auto flex-1 p-4\">\r\n              <div className=\"space-y-2\">\r\n                {history.map(item => (\r\n                  <div\r\n                    key={item.id}\r\n                    className=\"border rounded-lg hover:border-gray-300 transition-colors bg-white\"\r\n                  >\r\n                    {/* Clickable Header */}\r\n                    <div \r\n                      className=\"p-3 flex items-center justify-between cursor-pointer\"\r\n                      onClick={() => setExpandedHistoryId(expandedHistoryId === item.id ? null : item.id)}\r\n                    >\r\n                      <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n                        <span className={`px-2 py-1 rounded text-xs font-medium shrink-0 ${\r\n                          item.method === 'GET' ? 'bg-blue-100 text-blue-700' :\r\n                          item.method === 'POST' ? 'bg-green-100 text-green-700' :\r\n                          item.method === 'PUT' ? 'bg-yellow-100 text-yellow-700' :\r\n                          'bg-red-100 text-red-700'\r\n                        }`}>\r\n                          {item.method}\r\n                        </span>\r\n                        <span className=\"truncate font-mono text-xs text-gray-600\">\r\n                          {item.url}\r\n                        </span>\r\n                      </div>\r\n                      \r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          loadFromHistory(item);\r\n                        }}\r\n                        className=\"px-3 py-1 text-xs bg-[#ff6b4a] text-white rounded hover:bg-[#ff5436] shrink-0\"\r\n                      >\r\n                        Apply\r\n                      </button>\r\n                    </div>\r\n\r\n                    {/* Expanded Details */}\r\n                    {expandedHistoryId === item.id && (\r\n                      <div className=\"border-t px-3 py-2 text-xs\">\r\n                        <div className=\"space-y-2\">\r\n                          {/* Request Details */}\r\n                          <div className=\"space-y-1\">\r\n                            <div className=\"text-gray-500\">\r\n                              {new Date(item.timestamp).toLocaleString()}\r\n                            </div>\r\n                            <div className=\"flex gap-2\">\r\n                              {item.queryParams.some(p => p.key) && (\r\n                                <span className=\"px-2 py-0.5 bg-gray-100 rounded\">\r\n                                  {item.queryParams.filter(p => p.key).length} params\r\n                                </span>\r\n                              )}\r\n                              {item.headers.some(h => h.key) && (\r\n                                <span className=\"px-2 py-0.5 bg-gray-100 rounded\">\r\n                                  {item.headers.filter(h => h.key).length} headers\r\n                                </span>\r\n                              )}\r\n                              {item.body && Object.keys(item.body).length > 0 && (\r\n                                <span className=\"px-2 py-0.5 bg-gray-100 rounded\">\r\n                                  {typeof item.body === 'object' ? 'JSON' : 'Form'} body\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Response Preview */}\r\n                          {item.response && (\r\n                            <div className=\"border-t pt-2 mt-2\">\r\n                              <div className=\"flex items-center gap-2 mb-1\">\r\n                                <span className={`font-medium ${\r\n                                  item.response.status < 300 ? 'text-green-600' :\r\n                                  item.response.status < 400 ? 'text-blue-600' :\r\n                                  'text-red-600'\r\n                                }`}>\r\n                                  Status: {item.response.status}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"bg-gray-50 border rounded p-2 max-h-[100px] overflow-auto font-mono\">\r\n                                {JSON.stringify(item.response.data, null, 2)}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* URL Bar with Suggestions */}\r\n        <div className=\"flex gap-2 mb-4 relative\">\r\n          <select\r\n            value={method}\r\n            onChange={(e) => setMethod(e.target.value)}\r\n            className=\"px-4 py-2 border rounded bg-white text-gray-700 font-medium w-28\"\r\n          >\r\n            <option>GET</option>\r\n            <option>POST</option>\r\n            <option>PUT</option>\r\n            <option>DELETE</option>\r\n            <option>PATCH</option>\r\n          </select>\r\n          <div className=\"flex-1 relative\">\r\n            <input\r\n              type=\"text\"\r\n              value={url}\r\n              onChange={(e) => setUrl(e.target.value)}\r\n              onFocus={() => setShowSuggestions(true)}\r\n              placeholder=\"Enter request URL\"\r\n              className=\"w-full px-4 py-2 border rounded\"\r\n            />\r\n            {showSuggestions && (\r\n              <div className=\"absolute top-full left-0 right-0 bg-white border rounded-b shadow-lg mt-1 z-10\">\r\n                {urlSuggestions.map((suggestion, index) => (\r\n                  <div\r\n                    key={index}\r\n                    onClick={() => {\r\n                      setUrl(suggestion);\r\n                      setShowSuggestions(false);\r\n                    }}\r\n                    className=\"px-4 py-2 hover:bg-gray-50 cursor-pointer flex items-center gap-2\"\r\n                  >\r\n                    <FiSearch className=\"text-gray-400\" />\r\n                    <span>{suggestion}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <button\r\n              onClick={() => setShowSaveTemplate(true)}\r\n              className=\"px-4 py-2 border rounded text-gray-600 hover:text-gray-800\"\r\n            >\r\n              Save as Template\r\n            </button>\r\n            <button\r\n              onClick={handleSend}\r\n              disabled={loading}\r\n              className=\"px-6 py-2 bg-[#ff6b4a] text-white rounded font-medium hover:bg-[#ff5436] disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Sending...' : 'Send'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white border rounded-lg\">\r\n          <div className=\"flex border-b\">\r\n            <button\r\n              onClick={() => setActiveTab('params')}\r\n              className={`px-6 py-3 text-sm font-medium ${activeTab === 'params' ? 'text-[#ff6b4a] border-b-2 border-[#ff6b4a]' : 'text-gray-600'}`}\r\n            >\r\n              Query Params\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('headers')}\r\n              className={`px-6 py-3 text-sm font-medium ${activeTab === 'headers' ? 'text-[#ff6b4a] border-b-2 border-[#ff6b4a]' : 'text-gray-600'}`}\r\n            >\r\n              Headers\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('body')}\r\n              className={`px-6 py-3 text-sm font-medium ${activeTab === 'body' ? 'text-[#ff6b4a] border-b-2 border-[#ff6b4a]' : 'text-gray-600'}`}\r\n            >\r\n              Body\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"p-4\">\r\n            {activeTab === 'params' && (\r\n              <div className=\"space-y-2\">\r\n                {queryParams.map((param, index) => (\r\n                  <div key={index} className=\"flex gap-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={param.key}\r\n                      onChange={(e) => handleParamChange('query', index, 'key', e.target.value)}\r\n                      placeholder=\"Key\"\r\n                      className=\"flex-1 px-3 py-2 border rounded\"\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={param.value}\r\n                      onChange={(e) => handleParamChange('query', index, 'value', e.target.value)}\r\n                      placeholder=\"Value\"\r\n                      className=\"flex-1 px-3 py-2 border rounded\"\r\n                    />\r\n                    <button\r\n                      onClick={() => handleRemoveParam('query', index)}\r\n                      className=\"px-3 text-red-500 hover:text-red-600\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n                <button\r\n                  onClick={() => handleAddParam('query')}\r\n                  className=\"text-[#ff6b4a] font-medium hover:text-[#ff5436]\"\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'headers' && (\r\n              <div className=\"space-y-2\">\r\n                {headers.map((header, index) => (\r\n                  <div key={index} className=\"flex gap-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={header.key}\r\n                      onChange={(e) => handleParamChange('header', index, 'key', e.target.value)}\r\n                      placeholder=\"Key\"\r\n                      className=\"flex-1 px-3 py-2 border rounded\"\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={header.value}\r\n                      onChange={(e) => handleParamChange('header', index, 'value', e.target.value)}\r\n                      placeholder=\"Value\"\r\n                      className=\"flex-1 px-3 py-2 border rounded\"\r\n                    />\r\n                    <button\r\n                      onClick={() => handleRemoveParam('header', index)}\r\n                      className=\"px-3 text-red-500 hover:text-red-600\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n                <button\r\n                  onClick={() => handleAddParam('header')}\r\n                  className=\"text-[#ff6b4a] font-medium hover:text-[#ff5436]\"\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'body' && method !== 'GET' && (\r\n              <div className=\"space-y-4\">\r\n                {/* Body Type Tabs */}\r\n                <div className=\"flex border-b\">\r\n                  <button\r\n                    onClick={() => setRequestFormat('json')}\r\n                    className={`px-6 py-3 text-sm font-medium ${requestFormat === 'json'\r\n                        ? 'text-[#ff6b4a] border-b-2 border-[#ff6b4a]'\r\n                        : 'text-gray-600'\r\n                      }`}\r\n                  >\r\n                    raw (json)\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setRequestFormat('form')}\r\n                    className={`px-6 py-3 text-sm font-medium ${requestFormat === 'form'\r\n                        ? 'text-[#ff6b4a] border-b-2 border-[#ff6b4a]'\r\n                        : 'text-gray-600'\r\n                      }`}\r\n                  >\r\n                    form-data\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Body Content */}\r\n                <div className=\"p-4\">\r\n                  {requestFormat === 'json' ? (\r\n                    <div className=\"border rounded bg-white\">\r\n                      <div className=\"flex justify-between items-center border-b px-4 py-2\">\r\n                        <span className=\"text-sm font-medium text-gray-700\">JSON</span>\r\n                        <div className=\"flex gap-2\">\r\n                          <button\r\n                            onClick={() => {\r\n                              try {\r\n                                setRequestBody({});\r\n                              } catch (e) {\r\n                                console.error('Failed to clear JSON');\r\n                              }\r\n                            }}\r\n                            className=\"text-sm text-gray-500 hover:text-gray-700\"\r\n                          >\r\n                            Clear\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              try {\r\n                                const formatted = typeof requestBody === 'string'\r\n                                  ? JSON.parse(requestBody)\r\n                                  : requestBody;\r\n                                setRequestBody(formatted);\r\n                              } catch (e) {\r\n                                console.error('Invalid JSON');\r\n                              }\r\n                            }}\r\n                            className=\"text-sm text-[#ff6b4a] hover:text-[#ff5436]\"\r\n                          >\r\n                            Format\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex\">\r\n                        {/* Editable textarea */}\r\n                        <div className=\"w-1/2 border-r\">\r\n                          <textarea\r\n                            value={typeof requestBody === 'string' ? requestBody : JSON.stringify(requestBody, null, 2)}\r\n                            onChange={(e) => {\r\n                              try {\r\n                                const parsed = JSON.parse(e.target.value);\r\n                                setRequestBody(parsed);\r\n                              } catch {\r\n                                setRequestBody(e.target.value);\r\n                              }\r\n                            }}\r\n                            placeholder=\"Enter JSON request body\"\r\n                            className=\"w-full h-[300px] p-4 font-mono text-sm resize-none focus:outline-none\"\r\n                            spellCheck={false}\r\n                          />\r\n                        </div>\r\n                        {/* JSON Tree View */}\r\n                        <div className=\"w-1/2 p-4 overflow-auto h-[300px]\">\r\n                          <JsonTreeView\r\n                            data={\r\n                              typeof requestBody === 'string'\r\n                                ? JSON.parse(requestBody || '{}')\r\n                                : requestBody\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"space-y-2\">\r\n                      {Object.entries(requestBody || {}).map(([key, value], index) => (\r\n                        <div key={index} className=\"flex gap-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={key}\r\n                            onChange={(e) => {\r\n                              const newBody = { ...requestBody };\r\n                              delete newBody[key];\r\n                              newBody[e.target.value] = value;\r\n                              setRequestBody(newBody);\r\n                            }}\r\n                            placeholder=\"Key\"\r\n                            className=\"flex-1 px-3 py-2 border rounded\"\r\n                          />\r\n                          <input\r\n                            type=\"text\"\r\n                            value={value as string}\r\n                            onChange={(e) => {\r\n                              setRequestBody({\r\n                                ...requestBody,\r\n                                [key]: e.target.value\r\n                              });\r\n                            }}\r\n                            placeholder=\"Value\"\r\n                            className=\"flex-1 px-3 py-2 border rounded\"\r\n                          />\r\n                          <button\r\n                            onClick={() => {\r\n                              const newBody = { ...requestBody };\r\n                              delete newBody[key];\r\n                              setRequestBody(newBody);\r\n                            }}\r\n                            className=\"text-red-500 hover:text-red-600\"\r\n                          >\r\n                            <FiTrash2 />\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                      <button\r\n                        onClick={() => {\r\n                          setRequestBody({\r\n                            ...requestBody,\r\n                            '': ''\r\n                          });\r\n                        }}\r\n                        className=\"text-[#ff6b4a] hover:text-[#ff5436] flex items-center gap-1\"\r\n                      >\r\n                        <FiPlus /> Add\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Response Section */}\r\n        {response && (\r\n          <div className=\"mt-6\">\r\n            <h2 className=\"text-lg font-medium mb-2\">Response</h2>\r\n            <div className=\"bg-white border rounded max-h-[500px] flex flex-col\">\r\n              {/* Response Tabs */}\r\n              <div className=\"flex border-b shrink-0\">\r\n                <button\r\n                  onClick={() => setResponseTab('body')}\r\n                  className={`px-6 py-3 text-sm font-medium ${\r\n                    responseTab === 'body'\r\n                      ? 'text-[#ff6b4a] border-b-2 border-[#ff6b4a]'\r\n                      : 'text-gray-600'\r\n                  }`}\r\n                >\r\n                  Response Body\r\n                </button>\r\n                <button\r\n                  onClick={() => setResponseTab('headers')}\r\n                  className={`px-6 py-3 text-sm font-medium ${\r\n                    responseTab === 'headers'\r\n                      ? 'text-[#ff6b4a] border-b-2 border-[#ff6b4a]'\r\n                      : 'text-gray-600'\r\n                  }`}\r\n                >\r\n                  Response Headers\r\n                </button>\r\n              </div>\r\n\r\n              {/* Response Content */}\r\n              <div className=\"flex-1 overflow-auto\">\r\n                {responseTab === 'body' && (\r\n                  <div className=\"border rounded bg-white h-full\">\r\n                    <div className=\"flex justify-between items-center border-b px-4 py-2 sticky top-0 bg-white z-10\">\r\n                      <span className=\"text-sm font-medium text-gray-700\">Response Body</span>\r\n                      <button\r\n                        onClick={() => downloadJson(response.data, 'response.json')}\r\n                        className=\"text-sm text-[#ff6b4a] hover:text-[#ff5436] flex items-center gap-1\"\r\n                        title=\"Download JSON\"\r\n                      >\r\n                        <FiDownload size={14} />\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"p-4 font-mono text-sm\">\r\n                      <JsonTreeView data={response.data} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {responseTab === 'headers' && (\r\n                  <div className=\"border rounded bg-white h-full\">\r\n                    <div className=\"p-4 font-mono text-sm\">\r\n                      <div className=\"sticky top-0 bg-white pb-2 mb-2 border-b\">\r\n                        <span className=\"font-medium\">Status: </span>\r\n                        <span className={`${\r\n                          response.status < 300 ? 'text-green-600' :\r\n                          response.status < 400 ? 'text-blue-600' :\r\n                          'text-red-600'\r\n                        }`}>\r\n                          {response.status}\r\n                        </span>\r\n                      </div>\r\n                      <JsonTreeView data={response.headers} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}